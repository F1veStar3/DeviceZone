# Generated by Django 5.1.1 on 2024-10-21 15:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='banner_img/', verbose_name='Image')),
                ('alt_text', models.CharField(max_length=300, verbose_name='Alternative Text')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
            ],
            options={
                'verbose_name': 'Content:Banner',
                'verbose_name_plural': 'Content:Banners',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, verbose_name='Name')),
                ('img', models.ImageField(upload_to='brand_img/', verbose_name='Image')),
                ('alt_text', models.CharField(max_length=300, verbose_name='Alternative Text')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
            ],
            options={
                'verbose_name': 'Content:Brand',
                'verbose_name_plural': 'Content:Brands',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_items', models.PositiveIntegerField(default=0, verbose_name='Total Items')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Total Price')),
                ('in_order', models.BooleanField(default=False, verbose_name='In Order')),
                ('for_anonymous_user', models.BooleanField(default=False, verbose_name='For Anonymous User')),
            ],
            options={
                'verbose_name': 'Order:Cart',
                'verbose_name_plural': 'Order:Carts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, verbose_name='Name')),
                ('svg_icon', models.TextField(help_text='SVG Icon', verbose_name='SVG Icon')),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
            ],
            options={
                'verbose_name': 'Content:Category',
                'verbose_name_plural': 'Content:Categories',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Product:Color',
                'verbose_name_plural': 'Product:Colors',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('final_price_by_product', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Final Price by Product')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_products', to='mainapp.cart', verbose_name='Cart')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.color', verbose_name='Color')),
            ],
            options={
                'verbose_name': 'Order:Cart Item',
                'verbose_name_plural': 'Order:Cart Items',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='related_cart', to='mainapp.cartitem', verbose_name='Products'),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('related_cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.cart', verbose_name='Cart')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order:Customer',
                'verbose_name_plural': 'Order:Customers',
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.customer', verbose_name='Owner'),
        ),
        migrations.CreateModel(
            name='LikedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Product:Liked Product',
                'verbose_name_plural': 'Product:Liked Products',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('address', models.CharField(max_length=1024, verbose_name='Address')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Order Comment')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Order Creation Date')),
                ('status', models.CharField(default='pay_on_delivery', max_length=100, verbose_name='Status')),
                ('stripe_checkout_id', models.CharField(max_length=500, null=True, verbose_name='Stripe ID')),
                ('payment_method', models.CharField(choices=[('pay_on_delivery', 'Pay on Delivery'), ('online_payment', 'Online Payment')], max_length=50, verbose_name='Payment Method')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.cart', verbose_name='Cart')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_orders', to='mainapp.customer', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Order:Order',
                'verbose_name_plural': 'Order:Orders',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='orders',
            field=models.ManyToManyField(blank=True, related_name='related_order', to='mainapp.order', verbose_name='Customer Orders'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Name')),
                ('description', models.TextField(max_length=2000, verbose_name='Description')),
                ('main_img', models.ImageField(upload_to='product_main_img/', verbose_name='Main Image')),
                ('alt_text', models.CharField(max_length=225, null=True, verbose_name='Alternative Text')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('sale', models.BooleanField(default=False, verbose_name='Sale')),
                ('discount_percent', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Discount Percent')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('final_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Final Price')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('is_available', models.BooleanField(default=True, verbose_name='Is Available')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.category', verbose_name='Category')),
                ('likes', models.ManyToManyField(related_name='liked', through='mainapp.LikedProduct', to=settings.AUTH_USER_MODEL, verbose_name='Likes')),
            ],
            options={
                'verbose_name': 'Product:Product',
                'verbose_name_plural': 'Product:Products',
            },
        ),
        migrations.AddField(
            model_name='likedproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product', verbose_name='Product'),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_img', models.ImageField(blank=True, upload_to='product_additional_img/', verbose_name='Additional Image')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.color', verbose_name='Color')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product:Product Attribute',
                'verbose_name_plural': 'Product:Product Attributes',
            },
        ),
        migrations.CreateModel(
            name='Promo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='promo_img/', verbose_name='Image')),
                ('alt_text', models.CharField(max_length=300, verbose_name='Alternative Text')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('text', models.TextField(max_length=400, verbose_name='Text')),
                ('in_index_page', models.BooleanField(default=True, verbose_name='Show on Index Page')),
                ('redirect_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.product', verbose_name='Redirect Product')),
            ],
            options={
                'verbose_name': 'Content:Promo',
                'verbose_name_plural': 'Content:Promos',
            },
        ),
    ]
